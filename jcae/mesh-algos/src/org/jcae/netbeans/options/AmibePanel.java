/*
 * Project Info:  http://jcae.sourceforge.net
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
 *
 * (C) Copyright 2012, by EADS France
 */
package org.jcae.netbeans.options;

import org.openide.util.NbPreferences;

public class AmibePanel extends javax.swing.JPanel {

	AmibePanel() {
		initComponents();
		// TODO listen to changes in form fields and call controller.changed()
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        javax.swing.JLabel label = new javax.swing.JLabel();
        textField = new javax.swing.JFormattedTextField();

        setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(label, org.openide.util.NbBundle.getMessage(AmibePanel.class, "AmibePanel.label.text")); // NOI18N
        add(label, new java.awt.GridBagConstraints());

        textField.setColumns(10);
        textField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(textField, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

	void load() {
		// TODO read settings and initialize GUI
		// Example:        
		// someCheckBox.setSelected(Preferences.userNodeForPackage(AmibePanel.class).getBoolean("someFlag", false));
		// or for org.openide.util with API spec. version >= 7.4:
		// someCheckBox.setSelected(NbPreferences.forModule(AmibePanel.class).getBoolean("someFlag", false));
		// or:
		// someTextField.setText(SomeSystemOption.getDefault().getSomeStringProperty());
		textField.setValue(NbPreferences.forModule(AmibePanel.class).getInt("AmibeARThreshold", 400000));
	}

	void store() {
		// TODO store modified settings
		// Example:
		// Preferences.userNodeForPackage(AmibePanel.class).putBoolean("someFlag", someCheckBox.isSelected());
		// or for org.openide.util with API spec. version >= 7.4:
		// Ignoring integer's sign
		NbPreferences.forModule(AmibePanel.class).put("AmibeARThreshold", textField.getValue().toString());
		// or:
		// SomeSystemOption.getDefault().setSomeStringProperty(someTextField.getText());
	}

	boolean valid() {
		// TODO check whether form is consistent and complete
		return true;
	}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField textField;
    // End of variables declaration//GEN-END:variables
}
